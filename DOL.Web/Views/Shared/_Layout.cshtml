
<!doctype html>
<html class="no-js fixed-layout">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <meta name="renderer" content="webkit">
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta name="apple-mobile-web-app-title" content="Amaze UI" />
    <title>驾校网上报名管理平台</title>
    <link href="~/Styles/css/amazeui.css" rel="stylesheet" />
    @Styles.Render("~/Content/Admin")
    @RenderSection("linkcss", required: false)   
    @Scripts.Render("~/Scripts/Admin")
    <script>
        function changePassword() {

            $.Nuoya.ajaxDialog({
                closeViaDimmer: false,
                width: "800px",
                height: "280px",
                ajaxUrl: "/HtmlTemplates/User/ChangePassword.html",
                title: "修改密码",
                buttons: [{
                    label: "保存",
                    callback: function (e) {

                        var oldPassword = $("[name='OldPassword']").val();
                        var newPassword = $("[name='NewPassword']").val();
                        var cfmPassword = $("[name='ConfirmPassword']").val();

                        if (oldPassword != "" && newPassword != "" && cfmPassword != "") {
                            if (newPassword != cfmPassword) {
                                $.Nuoya.alert("密码不能为空");
                                return false;
                            }
                            $.Nuoya.action("/accout/ChangePassword", { oldPassword: oldPassword, newPassword: newPassword, cfmPassword: cfmPassword }, function (data) {
                                if (!data.ErrorDesc) {
                                    $.Nuoya.alert("修改密码成功");
                                    e.hide();
                                }
                                else
                                    $.Nuoya.alert(data.ErrorDesc);

                            });
                        }
                        else
                            $.Nuoya.alert("密码不能为空");
                    }
                }]
            });
        }

        //关闭/展示菜单
        function unState() {
            var state = $(".admin-sidebar").css("display");
            if (state == "none")
                $('.admin-sidebar').show();
            else
                $('.admin-sidebar').hide();
        }

        //根据市加载报名点
        function LoadEnteredPoint(isIndex, obj) {
            if (isIndex) {
                $("#searchDomain select[name='EnteredPointID']").empty();
            }
            else {
                $("#form select[name='EnteredPointID']").empty();
            }
            var cityCode = $(obj).val();
            if (cityCode != "" && cityCode != null) {
                $.Nuoya.action("/EnteredPoint/GetSelectItem", { cityCode: cityCode }, function (json) {
                    $(json).each(function () {
                        if (isIndex) {
                            $("#searchDomain select[name='EnteredPointID']").append("<option  value='" + this.Value + "'>" + this.Text + "</option>");
                        }
                        else {
                            $("#form select[name='EnteredPointID']").append("<option  value='" + this.Value + "'>" + this.Text + "</option>");
                        }
                    });
                });
            }
        }

        //获取Json的日期
        function RenderDate(data) {
            var da = eval('new ' + data.replace('/', '', 'g').replace('/', '', 'g'));
            return da.getFullYear() + "-" + da.getMonth() + "-" + da.getDate();
        }
        //获取Json的时间
        function RenderTime(data) {
            var da = eval('new ' + data.replace('/', '', 'g').replace('/', '', 'g'));
            return da.getFullYear() + "-" + da.getMonth() + "-" + da.getDate() + " " + da.getHours() + ":" + da.getSeconds() + ":" + da.getMinutes();
        }
        //根据报名点加载推荐人
        function LoadReference(isIndex, obj) {

            if (isIndex) {
                $("#searchDomain select[name='ReferenceID']").empty();
            }
            else {
                $("#form select[name='ReferenceID']").empty();
            }
            var enteredPointId = $(obj).val();
            if (enteredPointId != "" && enteredPointId != null) {
                $.Nuoya.action("/Reference/GetSelectItem", { enteredPointId: enteredPointId }, function (json) {
                    $(json).each(function () {
                        if (isIndex) {
                            $("#searchDomain select[name='ReferenceID']").append("<option  value='" + this.Value + "'>" + this.Text + "</option>");
                        }
                        else {
                            $("#form select[name='ReferenceID']").append("<option  value='" + this.Value + "'>" + this.Text + "</option>");
                        }
                    });
                });
            }
        }
        //加载省份
        function LoadProvince(isIndex, dataitem) {
            if (isIndex) {
                $.Nuoya.action("/Area/GetAreaCodeSelectItem", {}, function (json) {
                    $(json).each(function () {
                        $("#searchDomain select[name='ProvinceCode']").append("<option value='" + this.Value + "'>" + this.Text + "</option>");
                    });
                });
            }
            else {

                $.Nuoya.action("/Area/GetAreaCodeSelectItem", {}, function (json) {

                    $(json).each(function () {
                        if (dataitem != null && dataitem.EnteredProvinceCode == this.Value) {
                            $("#form select[name='EnteredProvinceCode']").append("<option  value='" + this.Value + "' selected='selected' >" + this.Text + "</option>");
                        } else {
                            $("#form select[name='EnteredProvinceCode']").append("<option  value='" + this.Value + "' >" + this.Text + "</option>");
                        }
                    });
                    if (dataitem != null) {
                        ShowCity(false, 1, dataitem.CityCode);
                        ShowCity(false, 2, dataitem.EnteredCityCode);
                    }
                });

            }
        }
        //加载学员信息的下拉框集合
        function LoadItemList(isIndex, dataitem) {
            $.Nuoya.action("/Student/GetSelectItemList", {}, function (json) {
                $(json.ReferenceList).each(function () {
                    if (isIndex) {
                        $("#searchDomain select[name='ReferenceID']").append("<option  value='" + this.ID + "'>" + this.Name + "</option>");
                    }
                    else {
                        if (dataitem != null) {
                            if (dataitem.ReferenceID == this.ID) {
                                $("#form select[name='ReferenceID']").append("<option  value='" + this.ID + "' selected='selected' >" + this.Name + "</option>");
                            } else {
                                $("#form select[name='ReferenceID']").append("<option  value='" + this.ID + "' >" + this.Name + "</option>");
                            }
                        }
                    }
                });
                $(json.DriverShopList).each(function () {
                    if (isIndex) {
                        $("#searchDomain select[name='MakeDriverShopID']").append("<option  value='" + this.ID + "'>" + this.Name + "</option>");
                    }
                    else {
                        if (dataitem != null && dataitem.MakeDriverShopID == this.ID) {
                            $("#form select[name='MakeDriverShopID']").append("<option  value='" + this.ID + "' selected='selected' >" + this.Name + "</option>");
                        } else {
                            $("#form select[name='MakeDriverShopID']").append("<option  value='" + this.ID + "' >" + this.Name + "</option>");
                        }
                        if (dataitem != null && dataitem.WantDriverShopID == this.ID) {
                            $("#form select[name='WantDriverShopID']").append("<option  value='" + this.ID + "' selected='selected' >" + this.Name + "</option>");
                        } else {
                            $("#form select[name='WantDriverShopID']").append("<option  value='" + this.ID + "' >" + this.Name + "</option>");
                        }
                        if ($("#form select[name='DriverShopID']") != null) {
                            if (dataitem != null && dataitem.DriverShopID == this.ID) {
                                $("#form select[name='DriverShopID']").append("<option  value='" + this.ID + "' selected='selected' >" + this.Name + "</option>");
                            } else {
                                $("#form select[name='DriverShopID']").append("<option  value='" + this.ID + "' >" + this.Name + "</option>");
                            }
                        }
                    }
                });
                $(json.EnteredPointList).each(function () {
                    if (isIndex) {
                        $("#searchDomain select[name='EnteredPointID']").append("<option  value='" + this.ID + "'>" + this.Name + "</option>");
                    }
                    else {
                        if (dataitem != null) {
                            if (dataitem.EnteredPointID == this.ID) {
                                $("#form select[name='EnteredPointID']").append("<option  value='" + this.ID + "' selected='selected' >" + this.Name + "</option>");
                            } else {
                                $("#form select[name='EnteredPointID']").append("<option  value='" + this.ID + "' >" + this.Name + "</option>");
                            }
                        }
                    }
                });

                $(json.CertificateList).each(function () {
                    if (isIndex) {

                    }
                    else {
                        if (dataitem != null && dataitem.CertificateID == this.Value) {
                            $("#form select[name='CertificateID']").append("<option  value='" + this.Value + "' selected='selected' >" + this.Text + "</option>");
                        } else {
                            $("#form select[name='CertificateID']").append("<option  value='" + this.Value + "' >" + this.Text + "</option>");
                        }
                    }
                });
                $(json.PayMethodList).each(function () {
                    if (isIndex) {
                    }
                    else {
                        if (dataitem != null && dataitem.PayMethodID == this.Value) {
                            $("#form select[name='PayMethodID']").append("<option  value='" + this.Value + "' selected='selected' >" + this.Text + "</option>");
                        } else {
                            $("#form select[name='PayMethodID']").append("<option  value='" + this.Value + "' >" + this.Text + "</option>");
                        }
                    }
                });
                $(json.TrainList).each(function () {
                    if (isIndex) {
                    }
                    else {
                        if (dataitem != null && dataitem.TrianID == this.Value) {
                            $("#form select[name='TrianID']").append("<option  value='" + this.Value + "' selected='selected' >" + this.Text + "</option>");
                        } else {
                            $("#form select[name='TrianID']").append("<option  value='" + this.Value + "' >" + this.Text + "</option>");
                        }
                    }
                });
                $(json.CoachList).each(function () {
                    if (isIndex) {
                    }
                    else {

                        if (dataitem != null && dataitem.ThemeThreeCoachID == this.ID) {
                            $("#form select[name='ThemeThreeCoachID']").append("<option  value='" + this.ID + "' selected='selected' >" + this.Name + "</option>");
                        } else {
                            $("#form select[name='ThemeThreeCoachID']").append("<option  value='" + this.ID + "' >" + this.Name + "</option>");
                        }
                        if (dataitem != null && dataitem.ThemeTwoCoachID == this.ID) {
                            $("#form select[name='ThemeTwoCoachID']").append("<option  value='" + this.ID + "' selected='selected' >" + this.Name + "</option>");
                        } else {
                            $("#form select[name='ThemeTwoCoachID']").append("<option  value='" + this.ID + "' >" + this.Name + "</option>");
                        }
                    }
                });
            });
        }

        //显示省份下方的市
        function ShowCity(isIndex, tabe, setVaule) {
            var value = "";
            if (isIndex) {
                {
                    value = $("#searchDomain select[name='ProvinceCode']").val();
                    $("#searchDomain select[name='CityCode']").empty();
                }
            }
            else {
                if (tabe == 1) {
                    value = $("#form select[name='ProvinceCode']").val();
                    $("#form select[name='CityCode']").empty();
                }
                else if (tabe == 2) {
                    value = $("#form select[name='EnteredProvinceCode']").val();
                    $("#form select[name='EnteredCityCode']").empty();
                }

            }

            if (value == "0")
                return false;
            $.Nuoya.action("/Area/GetAreaCodeSelectItem", { value: value }, function (json) {
                $(json).each(function () {
                    if (isIndex) {
                        $("#searchDomain select[name='CityCode']").append("<option value='" + this.Value + "'>" + this.Text + "</option>");
                    }
                    else {
                        if (tabe == 1) {
                            if (setVaule != null && setVaule == this.Value) {
                                $("#form select[name='CityCode']").append("<option value='" + this.Value + "'  selected='selected' >" + this.Text + "</option>");
                            }
                            else {
                                $("#form select[name='CityCode']").append("<option value='" + this.Value + "' >" + this.Text + "</option>");
                            }
                        }
                        else if (tabe == 2)
                            if (setVaule != null && setVaule == this.Value) {
                                $("#form select[name='EnteredCityCode']").append("<option value='" + this.Value + "'  selected='selected' >" + this.Text + "</option>");
                            }
                            else {
                                $("#form select[name='EnteredCityCode']").append("<option value='" + this.Value + "' >" + this.Text + "</option>");
                            }
                    }
                });
                if (!isIndex) {
                    if (tabe == 1) {
                        $("#form select[name='CityCode']").find('option').eq(1).attr('selected', true);
                    }
                    else if (tabe == 2)
                        $("#form select[name='EnteredCityCode']").find('option').eq(1).attr('selected', true);
                }
            });
        }

        //显示市下方的县区
        function ShowArea(isIndex, obj) {
            if (isIndex) {
                $("#searchDomain select[name='DistrictCode']").empty();
            }
            else {
                $("#form select[name='DistrictCode']").empty();
            }
            var value = $(obj).val();

            $.Nuoya.action("/Area/GetAreaCodeSelectItem", { value: value }, function (json) {
                $(json).each(function () {
                    if (isIndex) {
                        $("#searchDomain select[name='DistrictCode']").append("<option value='" + this.Value + "' selected>" + this.Text + "</option>");
                    }
                    else {
                        $("#form select[name='DistrictCode']").append("<option value='" + this.Value + "' selected>" + this.Text + "</option>");
                    }
                });
            });
        }

        //图片方法 缩小
        function ShowThum(item) {
            return "<a onclick='ShowImage(\"" + item.VoucherThum + "\")'><img src='" + item.VoucherThum + "' style='width:100px; height:40px;'/></a>"
        }

        //展示图片
        function ShowImage(src) {
            $("#imgDiv img").attr("src", src);
            $("#imgDiv").show();
        }
        $(function () {
            $("#imgDiv").click(function () {
                $("#imgDiv").hide();
            });
        });

        //获取页面路径
        function GetUrlRelativePath() {
            var url = document.location.toString();
            var arrUrl = url.split("//");

            var start = arrUrl[1].indexOf("/");
            var relUrl = arrUrl[1].substring(start);//stop省略，截取从start开始到结尾的所有字符

            if (relUrl.indexOf("?") != -1) {
                relUrl = relUrl.split("?")[0];
            }
            return relUrl;
        }

        //权限路径集合
        var operateUrlArray = new Array();


        //显示性别
        function Gender(item) {
            if (item.GenderCode == 1)
                return "男";
            else if (item.GenderCode == 2)
                return "女";
            else
                return "未知";
        }

        //学员状态
        function ShowState(item) {
            if (item.State == "0")
                return "未制卡";
            else if (item.State == "1")
                return "科目一";
            else if (item.State == "2")
                return "科目二";
            else if (item.State == "3")
                return "科目三";
            else if (item.State == "4")
                return "科目四";
            else if (item.State == "5")
                return "毕业";
            else if (item.State == "6")
                return "申请退学";
            else if (item.State == "7")
                return "已退学";
        }

        //显示是否确认
        function ShowConfirm(item) {
            if (item.IsConfirm == 1)
                return "已确认";
            else
                return "未确认";
        }

        //显示科目
        function ShowTheme(item) {
            if (item.Code == 1)
                return "科目一";
            else if (item.Code == 2)
                return "科目二";
            else if (item.Code == 3)
                return "科目三";
            else if (item.Code == 4)
                return "科目四";
            else
                return "未知";
        }

        //显示通过情况
        function ShowResult(item) {
            if (item.Result == 1)
                return "挂科";
            else if (item.Result == 2)
                return "通过";
            else if (item.Result == 3)
                return "缺考";
            else
                return "未知";
        }

        //加载是否框
        function LoadYesOrNoSelectItem(obj, key) {
            if (key == 0) {
                $(obj).append("<option value='0' selected>否</option>");
                $(obj).append("<option value='1' >是</option>");
            }
            else {
                $(obj).append("<option value='0'>否</option>");
                $(obj).append("<option value='1'>是</option>");
            }
        }

        //验证身份证
        function isCardID(obj, sexObj) {
            var sId = $(obj).val();
            if (sId != "") {
                if (sId.length == 10) {

                    if (!/^\d{6}19\d{2}$/.test(sId) && !/^\d{6}20\d{2}$/.test(sId)) {

                        //10位全数字 澳门
                        if (/^[1|5|7][0-9]{2}/.test(sId.substr(0, 3))) {
                            if (!/^[1|5|7][0-9]{6}\([0-9Aa]\)/.test(sId)) {
                                $.Nuoya.alert("你输入的澳门身份证身份证长度或格式错误")
                                return false;
                            } else {
                                $("#form #ProvinceName").val("澳门");
                                $("#form #ProvinceCode").val("820000");
                                $("#form #CityName").val("澳门");
                                $("#form #CityCode").val("821000");
                            }
                        }
                            //台湾和香港为第一位引英文。但是台湾后面全为数字 香港后面跟着6个数字
                            //台湾
                        else if (/^[a-zA-Z][0-9]{7}$/.test(sId.substr(0, 8))) {
                            if (!/^[a-zA-Z][0-9]{9}$/.test(sId)) {
                                $.Nuoya.alert("你输入的台湾身份证身份证长度或格式错误")
                                return false;
                            }
                            else {
                                var sex = sId.substr(1, 1);
                                //$(sexObj).find('option').eq(parseInt(sex)).attr('selected', true);
                                CreateSexSelect(sexObj, sex);
                                $("#form #ProvinceName").val("台湾");
                                $("#form #ProvinceCode").val("710000");
                                $("#form #CityName").val("台湾");
                                $("#form #CityCode").val("711000");
                            }
                        }
                        else if (!/^((\s?[A-Za-z])|([A-Za-z]{2}))\d{6}\(([0−9aA])|([0-9aA])\)$/.test(sId)) {
                            $.Nuoya.alert("你输入的香港身份证身份证长度或格式错误")
                            return false;
                        }
                        else {
                            var sex = sId.substr(1, 1);
                            CreateSexSelect(sexObj, sex);
                            //$(sexObj).find('option').eq(parseInt(sex)).attr('selected', true);
                            $("#form #ProvinceName").val("香港");
                            $("#form #ProvinceCode").val("810000");
                            $("#form #CityName").val("香港");
                            $("#form #CityCode").val("811000");
                        }

                    }
                }
                else if (sId.length == 18) {
                    var iSum = 0;
                    var info = "";

                    if (!/^\d{17}(\d|x)$/i.test(sId)) {
                        $.Nuoya.alert("你输入的身份证长度或格式错误")
                        return false;
                    }
                    sId = sId.replace(/x$/i, "a");
                    if (parseInt(sId.substr(0, 2)) == null) {
                        $.Nuoya.alert("你的身份证地区非法")
                        return false;
                    }
                    var sBirthday = sId.substr(6, 4) + "-" + Number(sId.substr(10, 2)) + "-" + Number(sId.substr(12, 2));
                    var d = new Date(sBirthday.replace(/-/g, "/"));
                    if (sBirthday != (d.getFullYear() + "-" + (d.getMonth() + 1) + "-" + d.getDate())) {
                        $.Nuoya.alert("身份证上的出生日期非法")
                        return false;
                    }
                    for (var i = 17; i >= 0; i--) iSum += (Math.pow(2, i) % 11) * parseInt(sId.charAt(17 - i), 11);
                    if (iSum % 11 != 1) {
                        $.Nuoya.alert("你输入的身份证号非法");
                        return false;
                    }
                    //此次还可以判断出输入的身份证号的人性别
                    var sex = parseInt(sId.substr(16, 1)) % 2;
                    {
                        CreateSexSelect(sexObj, sex);
                    }
                    var cityCode = sId.substr(0, 4) + "00";
                    var provinceCode = sId.substr(0, 2) + "0000";

                    $("#form #ProvinceCode").val(provinceCode);
                    $("#form #CityCode").val(cityCode);
                    if (cityCode == "352200") {
                        $("#form #ProvinceName").val("福建省");
                        $("#form #CityName").val("宁德市（旧）");
                    }
                    else {

                        $.Nuoya.action("/Area/GetByCityCode", { cityCode: cityCode }, function (json) {
                            $("#form #ProvinceName").val(json.Item1);
                            $("#form #CityName").val(json.Item2);

                        });
                    }
                    return true;
                }

                return true;
            }
            return false;
        }
        //验证学生数据
        function ValidStudent() {

            if (!isCardID($("[name='IDCard']"), $('[name=\'GenderCode\']'))) {
                return false;
            }

            if ($('#form [name="CertificateID"]').val() == "" || $('#form [name="CertificateID"]').val() == "-1") {
                $.Nuoya.alert("请选择培训车型");
                return false;
            }
            if ($('#form [name="WantDriverShopID"]').val() == "" || $('#form [name="WantDriverShopID"]').val() == "-1") {
                $.Nuoya.alert("请选择意向驾校");
                return false;
            }
            if ($('#form [name="PayMethodID"]').val() == "" || $('#form [name="PayMethodID"]').val() == "-1") {
                $.Nuoya.alert("请选择缴费方式");
                return false;
            }

            if ($('#form [name="MakeDriverShopID"]').val() == "-1") {
                $('#form [name="MakeDriverShopID"]').val("");
            }
            return true;
        }

        function CreateSexSelect(obj,selectIndex)
        {
            $(obj).empty();
            $(obj).append("<option value='-1'>未知</option>");
            $(obj).append("<option value='1'>男</option>");
            $(obj).append("<option value='2'>女</option>");
            $(obj).find('option').eq(selectIndex==0?2:1).attr('selected', true);
        }

        //返回上一页
        function BackUrl() {
            history.go(-1);
        }

        function GUID() {
            this.date = new Date();   /* 判断是否初始化过，如果初始化过以下代码，则以下代码将不再执行，实际中只执行一次 */
            if (typeof this.newGUID != 'function') {   /* 生成GUID码 */
                GUID.prototype.newGUID = function () {
                    this.date = new Date(); var guidStr = '';
                    sexadecimalDate = this.hexadecimal(this.getGUIDDate(), 16);
                    sexadecimalTime = this.hexadecimal(this.getGUIDTime(), 16);
                    for (var i = 0; i < 9; i++) {
                        guidStr += Math.floor(Math.random() * 16).toString(16);
                    }
                    guidStr += sexadecimalDate;
                    guidStr += sexadecimalTime;
                    while (guidStr.length < 32) {
                        guidStr += Math.floor(Math.random() * 16).toString(16);
                    }
                    return this.formatGUID(guidStr);
                }
                /* * 功能：获取当前日期的GUID格式，即8位数的日期：19700101 * 返回值：返回GUID日期格式的字条串 */
                GUID.prototype.getGUIDDate = function () {
                    return this.date.getFullYear() + this.addZero(this.date.getMonth() + 1) + this.addZero(this.date.getDay());
                }
                /* * 功能：获取当前时间的GUID格式，即8位数的时间，包括毫秒，毫秒为2位数：12300933 * 返回值：返回GUID日期格式的字条串 */
                GUID.prototype.getGUIDTime = function () {
                    return this.addZero(this.date.getHours()) + this.addZero(this.date.getMinutes()) + this.addZero(this.date.getSeconds()) + this.addZero(parseInt(this.date.getMilliseconds() / 10));
                }
                /* * 功能: 为一位数的正整数前面添加0，如果是可以转成非NaN数字的字符串也可以实现 * 参数: 参数表示准备再前面添加0的数字或可以转换成数字的字符串 * 返回值: 如果符合条件，返回添加0后的字条串类型，否则返回自身的字符串 */
                GUID.prototype.addZero = function (num) {
                    if (Number(num).toString() != 'NaN' && num >= 0 && num < 10) {
                        return '0' + Math.floor(num);
                    } else {
                        return num.toString();
                    }
                }
                /*  * 功能：将y进制的数值，转换为x进制的数值 * 参数：第1个参数表示欲转换的数值；第2个参数表示欲转换的进制；第3个参数可选，表示当前的进制数，如不写则为10 * 返回值：返回转换后的字符串 */GUID.prototype.hexadecimal = function (num, x, y) {
                    if (y != undefined) { return parseInt(num.toString(), y).toString(x); }
                    else { return parseInt(num.toString()).toString(x); }
                }
                /* * 功能：格式化32位的字符串为GUID模式的字符串 * 参数：第1个参数表示32位的字符串 * 返回值：标准GUID格式的字符串 */
                GUID.prototype.formatGUID = function (guidStr) {
                    var str1 = guidStr.slice(0, 8), str2 = guidStr.slice(8, 12), str3 = guidStr.slice(12, 16), str4 = guidStr.slice(16, 20), str5 = guidStr.slice(20);
                    return str1 + str2 + str3 + str4 + str5;
                }
            }
        }


        function ShowHistory(obj,isAtter)
        {
            var name = $(obj).attr("data-name");
            var id = $("[name='" + name + "']").val();
            window.open("/Student/History?Id=" + id + "&isAfter="+isAtter);
        }

        function ShowLogCode(item) {

            switch (item.Code) {
                case 1:
                    return "新增学员信息";
                    break;
                case 2:
                    return "编辑学员信息";
                    break;
                case 3:
                    return "删除学员信息";
                    break;
                case 4:
                    return "新增缴费记录";
                    break;
                case 5:
                    return "确认缴费记录";
                    break;
                case 6:
                    return "修改缴费记录";
                    break;
                case 7:
                    return "删除缴费记录";
                    break;
                case 8:
                    return "新增考试记录";
                    break;
                case 9:
                    return "删除考试记录";
                    break;
            }

        }
    </script>


</head>

<body>
    <header class="am-topbar am-topbar-inverse admin-header">
        <div class="am-topbar-brand">
            <a href="/home/index"><strong>驾校网上报名管理平台---@ViewBag.Title</strong></a>
        </div>
        <button class="am-topbar-btn am-topbar-toggle am-btn am-btn-sm am-btn-success am-show-sm-only" data-am-collapse="{target: '#topbar-collapse'}"><span class="am-sr-only">导航切换</span> <span class="am-icon-bars"></span></button>
        <div class="am-collapse am-topbar-collapse" id="topbar-collapse">
            <ul class="am-nav am-nav-pills am-topbar-nav am-topbar-right admin-header-list">
                <li><a href="javascript:;"><span class="am-icon-user">@(DOL.Core.CookieHelper.GetCurrentUser()?.Account)</span></a></li>

                <li><a href="javascript:changePassword()"><span class="am-icon-download">修改密码</span></a></li>
                <li><a href="/accout/Quit" class="admin-quit"><span class="am-icon-sign-out"></span> <span>注销</span></a></li>
            </ul>
        </div>
    </header>
    <div class="am-cf admin-main am-text-left">

        <div id="imgDiv" style="opacity:1;background-color:black;width:100%;height:100%;z-index:9000; display:none; position:absolute;">
            <div style="width:500px; margin:0 auto; z-index:9001;margin-top:10%">
                <img src="" style="width:100%;" />
            </div>
        </div>

        <!-- sidebar start -->
        <div class="admin-sidebar">
            <ul class="am-list admin-sidebar-list">
                @Html.Action("PartialMenu", "Menu")
            </ul>
        </div>
        <!-- sidebar end -->
        <!-- content start -->
        <div class="admin-content">
            <div>
                @RenderBody()
            </div>

        </div>
        <!-- content end -->
    </div>
    <a href="#" class="am-icon-btn am-icon-th-list am-show-sm-only admin-menu" data-am-offcanvas="{target: '#admin-offcanvas'}"></a>




    @RenderSection("scripts", false)
</body>
</html>



